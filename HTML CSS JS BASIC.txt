 [HTML]

<태그명 속성명="속성값">

주석 : <!-- 주석 내용 -->

<title> </title>태그를 이용해 제목을 지정할 때, 제목은 HTML 문서마다 중복되지 않도록 주의한다.
-구글이나 네이버 같은 검색 엔진 사이트에서 제목 중복되면 신뢰성이 떨어진다 판단해 노출이 적게 된다.

블록요소와 인라인요소
블록요소 : hn태그나 p태그처럼 공간과 상관없이 항상 줄 바꿈되는 태그로 작성한 코드 (C언어 비유하면 \n이 포함되는 코드인듯.)
인라인요소 : a태그나 span태그처럼 공간이 부족할 때만 줄 바꿈되는 태그로 작성한 코드 (C언어 비유하면 \n이 포함되지 않는 코드인듯.)
 

<HTML 필수 태그>

1. <hn>제목</hn>
hn태그로 작성된 텍스트는 검색 엔진에서 키워드로 인식. 따라서 검색엔진최적화(SEO)를 위해 본문에서 핵심이 되는 내용으로 제목이나 주제를 잘 선택해서 작성해야 한다.
hn 태그는 중간에 숫자를 건너 뛰지 말고 h1 태그부터 단계적으로 사용해야 한다. (생략하면 생략된 태그 이후는 검색엔진이 검색하지 않는다.)

2. <p>내용</p>
본문의 문단을 작성할 때 사용.

3. <br>
줄바꿈

4. ...기타 여러가지

5. 그룹 태그(=공간 분할 태그) - div, span
<div class="movie"> ... </div> : 블록 요소와 인라인 요소를 그룹으로 묶을 때 사용.
<span> </span> : 인라인 요소를 그룹으로 묶을 때 사용. 하나의 태그 안에 작성된 텍스트 일부만 디자인을 다르게 적용하기 위해 사용.(그룹으로 묶어 요소의 공간을 분할하면 분할된 요소에 CSS로 스타일을 적용할 수 있다.)

6. 목록 태그 (ul, ol, dl)

7. 링크와 이미지 넣기
<a>태그 : HTML에서 내부나 외부 링크를 생성.
	- : <a href = "대상 경로" target="링크 연결 방식" title="링크 설명"></a>
	-target은 보통 "_blank"를 이용(새 창으로 열리는 방식)

<img> 태그 : HTML에서 이미지 객체를 삽입할 때 이용.
	- : <img src="이미지 경로" alt="이미지 설명">

이미지를 넣을 때 내 컴퓨터에 저장된 이미지 넣으면 다른 사람이 보면 이미지 안뜬다. 이미지도 서버에 올려야 하기 때문에.

8. 텍스트 강조 태그 - strong, em

9. 폼 구성하기
1) form 태그 : HTML의 폼을 구성하는 태그는 모두 form 태그 안에 작성한다.
<form action="서버 url" method="get 또는 post"></form>
-action 속성 : 폼 요소에서 사용자와 상호작용으로 입력받은 값들을 전송할 서버의 URL 주소를 적는다.
-method 속성 : 입력받은 값을 서버에 전송할 때 송신 방식을 적는다. get 또는 post사용.

2) input 태그 : 로그인 페이지의 id, pw처럼 입력받는 요소를 생성할 때 사용.
<input type="종류" name="이름" value="초깃값">
-type 속성 : 종류가 굉장히 많다. checkbox, button, ...

3) label 태그 : form 태그 안에서 사용하는 상호작용 요소에 "이름을 붙일 때" 사용.
사용방법에 따라
-암묵적인 방법 : label 태그 내부에 폼 요소를 포함시켜 연결
	<label>
  		Username:
  		<input type="text">
	</label>

-명시적인 방법 : label 태그의 for 속성을 사용하여 특정 폼 요소의 id와 연결. for 속성값과 id 속성값이 같아야 한다.
	<label for="username">유저네임</label>
	<input type="text" id="username">

label 태그의 역할
1. 웹 폼을 만들 때, 각 입력란에 무엇을 입력해야 하는지 사용자에게 알려주는 라벨을 사용 (C언어 비유하면 scanf 앞에 printf로 설명해주는 그런느낌)
2. 접근성 향상 - 스크린 리더를 사용하는 사람들은 label 태그를 통해 입력 필드에 대한 설명을 읽을 수 있다. 즉, 시각 장애가 있는 사용자가 웹 페이지를 더 쉽게 탐색할 수 있도록 돕는다.
3. 클릭 영역 확대 - label 태그를 사용하면, 사용자가 라벨 텍스트를 클릭해도 연결된 입력 필드로 포커스가 이동. 특히, 작은 체크박스나 라디오 버튼 같은 경우, 라벨을 클릭함으로써 클릭 가능한 영역이 확대되어 사용자가 더 쉽게 선택할 수 있다.

4)fielset와 legend 태그
fieldset태그 : form 태그 안에 사용된 다양한 상호작용 요소도 fieldset 태그를 사용하여 그룹 지을 수 있다. fieldset 태그로 그룹을 지으면 그룹별로 박스 모양의 테두리가 생긴다. 그룹 지은 요소들을 legend 태그로 이름붙인다.

ex)
    <form action="#">
        <fieldset>
            <legend>그룹 이름</legend>
            <input type="button">
        </fieldset>
    </form>

5)textarea 태그 : 여러 줄의 입력 요소를 생성할 때는 input 태그가 아닌 textarea 태그를 사용.
<textarea> 초깃값 </textarea>

6)select, option, optgroup 태그 : select 태그를 사용하면 콤보박스를 생성할 수 있다. 콤보박스에 항목 하나를 추가할 때는 option 태그를 사용하고, 항목들을 그룹으로 묶고 싶다면 optgroup 태그를 사용한다.

ex)
<select>
	<optgroup label = "그룹 이름">
		<option value="서버에 전송할 값">웹 브라우저에 표시할 값</option>
	</optgroup>
</select>

select의 속성
	-size 속성
	-multiple 속성
	-selected 속성

7)button 태그
<button type="종류">버튼 내용</button>
	-type 속성값 : submit(폼을 서버에 전송할 목적), reset(상호작용 요소에 입력된 내용을 초기화), button(단순한 버튼)

최신 버전은 input 태그를 이용한 button보다는 button 태그를 이용하여 버튼을 생성한다. 단순하고, 꾸미기도 수월하기때문.

10. 폼 관련 태그에서 사용할 수 있는 추가 속성 : 지금까지 배운 폼 관련 태그에서 공통으로 사용할 수 있는 속성.
-disabled 속성 : 상호작용 요소 비활성화. input, textarea, select, button 태그에 사용가능. 태그가 비활성화되면 입력 요소는 텍스트 입력불가, 목록 상자는 항목 선택불가, 버튼 요소는 버튼 클릭 불가.
<태그 disabled>
-readonly 속성 : 상호작용 요소를 읽기 전용으로 변경. textarea, input 태그에서 사용.
<태그 readonly>
disabled 속성은 form 태그로 서버에 값을 전송할 때 값이 아예 전송되지 않지만, readonly는 값이 전송된다.

-maxlength 속성 : 입력할 수 있는 글자 수 제한. textarea태그와, input 태그의 type 속성값이 글자수 입력 관련이면 사용 가능.
<태그 maxlength="숫자">
-checked 속성 : 요소를 선택된 상태로 표시. 선택요소가 있어야 하므로 input 태그의 type속성값이 checkbox나 radio인 요소에만 사용할 수 있다.
<태그 checked>
-placeholder 속성 : 입력 요소에 어떠한 값을 입력하면 되는지 힌트를 적는 용도로 사용.
<input placeholder="입력값에 대한 힌트">

11. 표 만들기
table 태그 : HTML에서 표를 생성할 때 사용.
caption 태그 : 표 제목을 지정. table 태그 안에 첫번째로 작성해야 한다.
tr 태그 : 표에서 행을 하나 생성. 여러개 사용하고 싶으면 여러번 사용하면 된다.
th 태그 : 표에서 제목을 나타내는 열을 생성할 때 사용.
td 태그 : 표에서 일반적인 데이터를 나타내는 열을 생성할 때 사용. 
<table>
	<caption>표 제목</caption>
</table>

rowspan과 colspan 속성 : 셀을 병합할때 사용
<td rowspan="2">병합 내용</td> : 2개 행 병합.

thead,tfoot,tbody 태그 : 표에서도 행을 묶어 그룹화. thead 태그는 헤더 영역에 해당하는 행, tfoot 태그는 푸터 영역에 해당하는 행, tbody 태그는 본문 영역에 해당하는 행을 그룹 짓는다. 사용한다면 반드시 thead, tfoot, tbody 순서여야 한다. thead와 tfoot 태그는 한번만 사용할 수 있고, thead 태그로 그룹화한 행은 th 태그로 열을 생성해야 한다.
쉽게 이해하면 thead는 헤더부분, tfoot은 표 끝부분, tbody는 표 중간내용.
사용하는 이유 - 웹 접근성 향상.

col과 colgroup 태그
col : 하나의 열 그룹화
colgroup : span 속성과 함께 사용해 2개 이상의 열을 그룹화.

scope 속성


12. 멀티미디어 설정 : 멀티미디어 관련 요소로 웹페이지에서 가장 많이 볼 수 있는 것은 오디오와 비디오.
audio 태그와 video 태그로 작성가능.

audio 태그 
<audio src="오디오 파일 경로" controls></audio>

video 태그
<video src="비디오 파일 경로" controls></video>

13. 시맨틱 태그 : 웹 페이지 구조 설계. 태그의 이름만으로 태그의 용도나 역할에 대한 의미가 명확한 태그를 말한다.
1)header 태그
2)nav 태그
3)section 태그 (hn태그 중 하나를 포함) : 웹 페이지에서 논리적으로 관련 있는 내용 영역을 구분할 때 사용.
4)article 태그 : 웹 페이지에서 독립적인 영역을 구분할 때 사용.
5)aside 태그 : 웹 페이지 안에서 주력 내용이나 독립적인 내용으로 보기 어려워서 article 태그나 section 태그로 영역을 구분할 수 없을 때 사용.
6)footer 태그
7)main 태그

14. 글로벌 속성 : 태그 종류에 상관없이 사용.
1)class
2)id
...



[CSS]

<1>

1. CSS 문법 형식 : 선택자, 선언부로 구분.
선택자 : CSS 스타일을 적용할 HTML 태그(요소)를 선택하는 영역.
선언부 : 선택자에서 선택한 태그에 적용할 스타일을 작성하는 영역. {}안에 넣는다.
	-스타일은 반드시 속성과 값을 한쌍으로 작성.
	-값 뒤에 ;를 넣으면 여러 스타일을 연속해서 작성할 수 있다.

주석 : /* */

2. CSS를 HTML 문서에 적용하는 3가지 방법
1)내부 스타일 시트 사용하기 : <style> CSS 코드 </style>. 보통 head 태그 안에 사용한다. 그러나 HTML 문서를 해석할 때마다 CSS 코드를 매번 다시 읽기 때문에 성능상으로는 좋지 못하다.
2)외부 스타일 시트 사용하기 : CSS코드를 작성하는 별도 파일을 만들어 HTML 문서와 CSS를 연결.
연결방법 : link 태그 이용. <link rel="stylesheet" href="css 파일 경로">
3)인라인 스타일 사용하기 : HTML 태그에서 사용할 수 있는 style 속성에 CSS코드를 작성하는 방법.
<태그 style="CSS 코드"></태그>

실무에서는 대부분 2번을 이용한다. 코드 유지보수에 편하고, 성능적으로도 가장 좋기 때문.

<2> CSS 선택자 다루기
<기본선택자>
1. 전체 선택자 : *   HTML에서 사용할 수 있는 모든 요소를 한 번에 선택자로 지정하는 방법.
2. 태그 선택자 : 태그명{ CSS 코드 }
3. 아이디 선택자 : #id속성값{ CSS 코드 }   HTML 태그에서 사용할 수 있는 id 속성값을 이용해 선택자를 지정하는 방법.
	(id 속성값은 하나의 문서 안에서는 고유해야 한다.)
4. 클래스 선택자 : HTML 태그에서 사용할 수 있는 class 속성값을 이용해 선택자를 지정. 속성값 앞에 .기호를 붙인다. .class속성값{ CSS 코드 }
	(class 속성은 id 속성과 다르게 속성값을 중복해서 사용할 수 있다.)
5. 기본 속성 선택자 : [속성]{ CSS 코드 } 또는 [속성=값]{ CSS 코드 }
	속성 선택자는 아이디, 태그, 클래스 선택자와 함께 사용할 수 있고, 단독으로 사용할 수도 있다.
	ex) a[href]{} : a태그에 href 속성이 있는 요소 선택.
	ex) .title[href]{} : title클래스에 href 속성이 있는 요소 선택.
	ex) [href]{} : 어떤 요소라도 href 속성만 있으면 선택.
6. 문자열 속성 선택자

<조합 선택자>
1. 그룹 선택자
선택자 1, 선택자2, ... 선택자n{ CSS 코드 }
ex) p, #title, .red{ CSS 코드 }

2. 자식 선택자 : 부모 요소의 하위에 있는 자식 요소에 스타일을 적용할 때 사용.
부모 선택자 > 자식 선택자{ CSS 코드 }
ex) .box > p{ CSS 코드 } : class 속성값이 box인 요소와 자식 관계에 있는 p태그로 작성된 요소만 선택자로 지정.

3. 하위 선택자 : 선택자의 범위를 특정 부모 요소의 하위 요소로 한정하는 방법.
ex) div p{ CSS 코드 } : div 태그의 하위에 있는 p태그로 작성된 요소만 선택.

4. 인접 형제 선택자 : 앞에서 지정한 선택자 요소 바로 "다음"(이전 아님)에 있는 형제 관계 요소를 선택자로 지정.
이전 선택자 + 대상 선택자{ CSS 코드 }
ex) h1 + h2 { CSS 코드 } : h1 태그와 인접한 형제 관계이며 인접한 h2 태그에만 적용.

5. 일반 형제 선택자 : 이전 선택자 뒤에 오는 형제 관계 요소 모두 선택자로 지정
이전 선택자 ~ 대상 선택자{ CSS 코드 }

<가상 요소 선택자>
가상 요소 선택자 : HTML 문서에 명시적으로 작성된 구성 요소는 아니지만, 마치 존재하는 것처럼 취급해 선택하는 선택자 지정 방법.
기준 선택자::가상 요소 선택자{ CSS 코드 }
 ex)
	1. ::before : 콘텐츠 앞의 공간을 선택
	2. ::after : 콘텐츠 뒤의 공잔을 선택
	+a : content 속성 : 위의 두 선택자에서만 사용하는 속성. CSS속성. 새로운 콘텐츠를 만들거나 추가할 때 사용.

<가상 클래스 선택자 사용하기>
가상 클래스 선택자 : 요소의 상태를 이용해 선택자를 지정하는 방법

기준요소:가상 클래스 선택자{ CSS 코드 }
1. 링크 가상 클래스 선택자 : a 태그에서 발생할 수 있는 링크 상태를 이용해 선택하는 방법
	:link    한번도 방문하지 않은 링크일 떄 선택
	:visited : 한번이라도 방문한 적이 있는 링크일 때 선택
	ex) a:link{ CSS 코드 }

2. 동적 가상 클래스 선택자